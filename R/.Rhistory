critical_effect_size_additive <- function(Control_N,
StressorA_N,
Small_Sample_Correction = TRUE,
Significance_Level = 0.05){
### Need some checks here to ensure input data is correct.
### Ensure all N, SD, and Mean are numeric
booleans_numeric <- c(is.numeric(Control_N) | is.na(Control_N),
is.numeric(StressorA_N) | is.na(StressorA_N))
if(FALSE %in% booleans_numeric == TRUE){
stop("Ensure that all values for all variables are numeric or NA")
}
### Ensure Small_Sample_Correction is either TRUE or FALSE or 'missing'
if(Small_Sample_Correction %in% c(TRUE, FALSE) == FALSE){
stop("Please ensure that Small_Sample_Correction is either TRUE or FALSE (note that default value is TRUE)")
}
### Ensure Significance_Level is >0 and <1 or 'missing'
if(is.numeric(Significance_Level) == FALSE){
stop("Please ensure that Significance_Level is numeric")
}
if(Significance_Level < 0 | Significance_Level > 1){
stop("Please ensure that Significance_Level is between 0 and 1")
}
### Check whether N variables are all integers
integer_check <- c(Control_N, StressorA_N)
if(length(integer_check) != length(integer_check[integer_check %% 1 == 0])){
warning("It is expected that all sample sizes will be integer values.
Double check whether non-integer values for sample sizes are correct.")
}
### Ensure that the lengths of all variables are the same
lengths <- c(length(Control_N),
length(StressorA_N))
if(length(unique(lengths)) != 1){
stop("Ensure that all variables are the same length")
}
z_v <- stats::qnorm(Significance_Level/2)
if(Small_Sample_Correction == TRUE){
J_m <- function(m){
m <- m-2
J <- 1 - (3)/((4*m) -1)
return(J)
}
}
if(Small_Sample_Correction == FALSE){
J_m <- function(m){
J <- 1
return(J)
}
}
m <- Control_N + StressorA_N
es_cv <- (1/Control_N + 1/StressorA_N )*(((2*z_v*z_v)*(m)*J_m(m)*J_m(m))/(2*(m)-z_v*z_v*J_m(m)*J_m(m)))
es_cv <- sqrt(es_cv)
return(es_cv)
}
critical_effect_size_additive(100, 100)
critical_effect_size_additive(25)
a <- 2:100
aa <- critical_effect_size_additive(a, a)
aa
plot(a, aa)
J_m <- function(m){
m <- m-2
J <- 1 - (3)/((4*m) -1)
return(J)
}
J_m(2)
J_m(3)
J_m(4)
J_m(5)
J_m(6)
J_m(7)
J_m(4)
J_m(5)
J_m(6)
J_m(7)
z_v <- 1.96
Control_N <- StressorA_N <- 2
Control_N <- StressorA_N <- 2
sqrt((1/Control_N + 1/StressorA_N)*(((2*z_v*z_v)*(m)*J_m(m)*J_m(m))/(2*(m)-z_v*z_v*J_m(m)*J_m(m))))
Control_N <- StressorA_N <- 2
m <- Control_N + StressorA_N
sqrt((1/Control_N + 1/StressorA_N)*(((2*z_v*z_v)*(m)*J_m(m)*J_m(m))/(2*(m)-z_v*z_v*J_m(m)*J_m(m))))
Control_N <- StressorA_N <- 3
m <- Control_N + StressorA_N
sqrt((1/Control_N + 1/StressorA_N)*(((2*z_v*z_v)*(m)*J_m(m)*J_m(m))/(2*(m)-z_v*z_v*J_m(m)*J_m(m))))
Control_N <- StressorA_N <- 2
m <- Control_N + StressorA_N
(1/Control_N + 1/StressorA_N)
((2*z_v*z_v)*(m)*J_m(m)*J_m(m))
(2*(m)-z_v*z_v*J_m(m)*J_m(m))
Control_N <- StressorA_N <- 3
m <- Control_N + StressorA_N
(1/Control_N + 1/StressorA_N)
((2*z_v*z_v)*(m)*J_m(m)*J_m(m))
(2*(m)-z_v*z_v*J_m(m)*J_m(m))
Control_N <- StressorA_N <- 4
m <- Control_N + StressorA_N
(1/Control_N + 1/StressorA_N)
((2*z_v*z_v)*(m)*J_m(m)*J_m(m))
(2*(m)-z_v*z_v*J_m(m)*J_m(m))
aa
aa[31]
aa[30]
