fill=Interaction_Classification,
shape=Interaction_Classification)) +
ggplot2::geom_point() +
ggplot2::scale_fill_manual(values = col_vals) +
ggplot2::scale_colour_manual(values = rep("black", length(unique(df_MA$Interaction_Classification)))) +
ggplot2::scale_shape_manual(values = c(21, 22, 23, 24, 25)[c(1:length(unique(df_MA$Interaction_Classification)))]) +
ggplot2::theme_classic() +
ggplot2::theme(legend.position="none") +
ggplot2::ylab("Effect Size") +
ggplot2::xlab("Sample Size") #+
#ggplot2::annotate("text", x=0.5, y=0.9*max(df_MA$Interaction_Effect_Size), "ii)")
if(unique(df_MA$Null_Model) == "Additive"){
critical_effect_size_additivef <- function(Control_N,
StressorA_N,
StressorB_N,
StressorsAB_N,
Small_Sample_Correction = TRUE,
Significance_Level = 0.05){
#### Need some checks here to ensure input data is correct.
#
#### Ensure all N, SD, and Mean are numeric
#booleans_numeric <- c(is.numeric(Control_N) | is.na(Control_N),
#                      is.numeric(StressorA_N) | is.na(StressorA_N),
#                      is.numeric(StressorB_N) | is.na(StressorB_N),
#                      is.numeric(StressorsAB_N) | is.na(StressorsAB_N))
#
#if(FALSE %in% booleans_numeric == TRUE){
#  stop("Ensure that all values for all variables are numeric or NA")
#}
#
#### Ensure Small_Sample_Correction is either TRUE or FALSE or 'missing'
#if(Small_Sample_Correction %in% c(TRUE, FALSE) == FALSE){
#  stop("Please ensure that Small_Sample_Correction is either TRUE or FALSE (note that default value is TRUE)")
#}
#
#### Ensure Significance_Level is >0 and <1 or 'missing'
#if(is.numeric(Significance_Level) == FALSE){
#  stop("Please ensure that Significance_Level is numeric")
#}
#if(Significance_Level < 0 | Significance_Level > 1){
#  stop("Please ensure that Significance_Level is between 0 and 1")
#}
#
#### Check whether N variables are all integers
#integer_check <- c(Control_N, StressorA_N, StressorB_N, StressorsAB_N)
#if(length(integer_check) != length(integer_check[integer_check %% 1 == 0])){
#  warning("It is expected that all sample sizes will be integer values.
#          Double check whether non-integer values for sample sizes are correct.")
#}
#
#### Ensure that the lengths of all variables are the same
#lengths <- c(length(Control_N),
#             length(StressorA_N),
#             length(StressorB_N),
#             length(StressorsAB_N))
#
#if(length(unique(lengths)) != 1){
#  stop("Ensure that all variables are the same length")
#}
z_v <- stats::qnorm(Significance_Level/2)
if(Small_Sample_Correction == TRUE){
J_m <- function(m){
m <- m-4
J <- 1 - (3)/((4*m) -1)
return(J)
}
}
if(Small_Sample_Correction == FALSE){
J_m <- function(m){
J <- 1
return(J)
}
}
m <- Control_N + StressorA_N + StressorB_N + StressorsAB_N
es_cv <- (1/Control_N + 1/StressorA_N + 1/StressorB_N + 1/StressorsAB_N)*(((2*z_v*z_v)*(m)*J_m(m)*J_m(m))/(2*(m)-z_v*z_v*J_m(m)*J_m(m)))
es_cv <- sqrt(es_cv)
return(es_cv)
}
df_line1 <- data.frame(Sample_Size_Median = min(df_MA$Sample_Size_Median, na.rm = T):max(df_MA$Sample_Size_Median, na.rm = T))
df_line1$Interaction_Effect_Size <- critical_effect_size_additivef(df_line1$Sample_Size_Median,
df_line1$Sample_Size_Median,
df_line1$Sample_Size_Median,
df_line1$Sample_Size_Median,
Small_Sample_Correction,
Significance_Level)
df_line1$Interaction_Classification = "Null"
df_line2 <- df_line1
df_line2$Interaction_Effect_Size <- -df_line2$Interaction_Effect_Size
plot2 <- plot2 +
ggplot2::geom_line(data = df_line1, color="black") +
ggplot2::geom_line(data = df_line2, color="black")
}
##Plot 3 - Median Sample Size Distribution
plot3 <- ggplot2::ggplot(df_MA,
ggplot2::aes(x=df_MA$Sample_Size_Median)) +
ggplot2::geom_density(alpha=0.2, na.rm = T) +
ggplot2::ylab("Density") +
ggplot2::xlab("Sample Size") +
#ggplot2::annotate("text", x=0.5, y=0.9, "iii)") +
ggplot2::theme_classic() +
ggplot2::theme(legend.position="none")
##Plot 4 - Effect size to inverse of variance
plot4 <- ggplot2::ggplot(df_MA,
ggplot2::aes(y=1/(df_MA$Interaction_Variance),
x=df_MA$Interaction_Effect_Size)) +
ggplot2::geom_point() +
ggplot2::xlab("Effect Size") +
ggplot2::ylab("Inverse Variance") +
#ggplot2::annotate("text", x=0.5, y=0.9*max(df_MA$Interaction_Effect_Size), "iv)") +
ggplot2::theme_classic() +
ggplot2::theme(legend.position="none")
##Plot 5 - Effect size to inverse of variance
df_MA$Interaction_Standard_Error <- sqrt(df_MA$Interaction_Variance)
plot5 <- ggplot2::ggplot(df_MA,
ggplot2::aes(y=df_MA$Interaction_Standard_Error,
x=df_MA$Interaction_Effect_Size)) +
ggplot2::geom_point() +
ggplot2::xlab("Effect Size") +
ggplot2::ylab("Standard Error") +
#ggplot2::annotate("text", x=0.5, y=0.9*max(df_MA$Interaction_Effect_Size), "v)") +
ggplot2::theme_classic() +
ggplot2::theme(legend.position="none")
plot_overall <- patchwork::wrap_plots(plot1, plot2, plot3, plot4, plot5, ncol = 3, nrow=2)
return(plot_overall)
}
#generating example dataframe
df <- data.frame(N_C       = c(3, 5, 4, 4),
SD_C      = c(0.15, 0.1, 0.12, 0.19),
Mean_C    = c(0.9, 0.92, 0.75, 0.86),
N_A       = c(3, 5, 4, 4),
SD_A      = c(0.14, 0.12, 0.16, 0.13),
Mean_A    = c(0.66, 0.72, 0.71, 0.67),
N_B       = c(3, 5, 4, 4),
SD_B      = c(0.17, 0.08, 0.14, 0.14),
Mean_B    = c(0.71, 0.73, 0.62, 0.69),
N_X       = c(3, 5, 4, 4),
SD_X      = c(0.11, 0.18, 0.21, 0.10),
Mean_X    = c(0.53, 0.44, 0.58, 0.45));
#calculating effect sizes
df <- effect_size_additive(Control_N         = df$N_C,
Control_SD        = df$SD_C,
Control_Mean      = df$Mean_C,
StressorA_N       = df$N_A,
StressorA_SD      = df$SD_A,
StressorA_Mean    = df$Mean_A,
StressorB_N       = df$N_B,
StressorB_SD      = df$SD_B,
StressorB_Mean    = df$Mean_B,
StressorsAB_N     = df$N_X,
StressorsAB_SD    = df$SD_X,
StressorsAB_Mean  = df$Mean_X,
Significance_Level = 0.10);
#classifying interactions
df <- classify_interactions(effect_size_dataframe = df,
assign_reversals = TRUE,
remove_directionality = TRUE);
#generate summary plots
df_plots <- summary_plots(effect_size_dataframe = df,
Significance_Level = 0.10)
df_plots
#generating example dataframe
df <- data.frame(N_C       = c(3, 5, 4, 4),
SD_C      = c(0.15, 0.1, 0.12, 0.19),
Mean_C    = c(0.9, 0.92, 0.75, 0.86),
N_A       = c(3, 5, 4, 4),
SD_A      = c(0.14, 0.12, 0.16, 0.13),
Mean_A    = c(0.66, 0.72, 0.71, 0.67),
N_B       = c(3, 5, 4, 4),
SD_B      = c(0.17, 0.08, 0.14, 0.14),
Mean_B    = c(0.71, 0.73, 0.62, 0.69),
N_X       = c(3, 5, 4, 4),
SD_X      = c(0.11, 0.18, 0.21, 0.10),
Mean_X    = c(0.33, 0.44, 0.58, 0.45));
#calculating effect sizes
df <- effect_size_additive(Control_N         = df$N_C,
Control_SD        = df$SD_C,
Control_Mean      = df$Mean_C,
StressorA_N       = df$N_A,
StressorA_SD      = df$SD_A,
StressorA_Mean    = df$Mean_A,
StressorB_N       = df$N_B,
StressorB_SD      = df$SD_B,
StressorB_Mean    = df$Mean_B,
StressorsAB_N     = df$N_X,
StressorsAB_SD    = df$SD_X,
StressorsAB_Mean  = df$Mean_X,
Significance_Level = 0.10);
#classifying interactions
df <- classify_interactions(effect_size_dataframe = df,
assign_reversals = TRUE,
remove_directionality = TRUE);
#generate summary plots
df_plots <- summary_plots(effect_size_dataframe = df,
Significance_Level = 0.10)
df_plots
#generating example dataframe
df <- data.frame(N_C       = c(3, 5, 4, 4),
SD_C      = c(0.15, 0.1, 0.12, 0.19),
Mean_C    = c(0.9, 0.92, 0.75, 0.86),
N_A       = c(3, 5, 4, 4),
SD_A      = c(0.14, 0.12, 0.16, 0.13),
Mean_A    = c(0.66, 0.72, 0.71, 0.67),
N_B       = c(3, 5, 4, 4),
SD_B      = c(0.17, 0.08, 0.14, 0.14),
Mean_B    = c(0.71, 0.73, 0.62, 0.69),
N_X       = c(3, 5, 4, 4),
SD_X      = c(0.11, 0.18, 0.21, 0.10),
Mean_X    = c(0.73, 0.44, 0.58, 0.45));
#calculating effect sizes
df <- effect_size_additive(Control_N         = df$N_C,
Control_SD        = df$SD_C,
Control_Mean      = df$Mean_C,
StressorA_N       = df$N_A,
StressorA_SD      = df$SD_A,
StressorA_Mean    = df$Mean_A,
StressorB_N       = df$N_B,
StressorB_SD      = df$SD_B,
StressorB_Mean    = df$Mean_B,
StressorsAB_N     = df$N_X,
StressorsAB_SD    = df$SD_X,
StressorsAB_Mean  = df$Mean_X,
Significance_Level = 0.10);
#classifying interactions
df <- classify_interactions(effect_size_dataframe = df,
assign_reversals = TRUE,
remove_directionality = TRUE);
#generate summary plots
df_plots <- summary_plots(effect_size_dataframe = df,
Significance_Level = 0.10)
df_plots
#generating example dataframe
df <- data.frame(N_C       = c(3, 5, 4, 4),
SD_C      = c(0.15, 0.1, 0.12, 0.19),
Mean_C    = c(0.9, 0.92, 0.75, 0.86),
N_A       = c(3, 5, 4, 4),
SD_A      = c(0.14, 0.12, 0.16, 0.13),
Mean_A    = c(0.66, 0.72, 0.71, 0.67),
N_B       = c(3, 5, 4, 4),
SD_B      = c(0.17, 0.08, 0.14, 0.14),
Mean_B    = c(0.71, 0.73, 0.62, 0.69),
N_X       = c(3, 5, 4, 4),
SD_X      = c(0.08, 0.18, 0.21, 0.10),
Mean_X    = c(0.73, 0.44, 0.58, 0.45));
#calculating effect sizes
df <- effect_size_additive(Control_N         = df$N_C,
Control_SD        = df$SD_C,
Control_Mean      = df$Mean_C,
StressorA_N       = df$N_A,
StressorA_SD      = df$SD_A,
StressorA_Mean    = df$Mean_A,
StressorB_N       = df$N_B,
StressorB_SD      = df$SD_B,
StressorB_Mean    = df$Mean_B,
StressorsAB_N     = df$N_X,
StressorsAB_SD    = df$SD_X,
StressorsAB_Mean  = df$Mean_X,
Significance_Level = 0.10);
#classifying interactions
df <- classify_interactions(effect_size_dataframe = df,
assign_reversals = TRUE,
remove_directionality = TRUE);
#generate summary plots
df_plots <- summary_plots(effect_size_dataframe = df,
Significance_Level = 0.10)
df_plots
#generating example dataframe
df <- data.frame(N_C       = c(3, 5, 4, 4),
SD_C      = c(0.15, 0.1, 0.12, 0.19),
Mean_C    = c(0.9, 0.92, 0.75, 0.86),
N_A       = c(3, 5, 4, 4),
SD_A      = c(0.14, 0.12, 0.16, 0.13),
Mean_A    = c(0.66, 0.72, 0.71, 0.67),
N_B       = c(3, 5, 4, 4),
SD_B      = c(0.17, 0.08, 0.14, 0.14),
Mean_B    = c(0.69, 0.73, 0.62, 0.69),
N_X       = c(3, 5, 4, 4),
SD_X      = c(0.08, 0.18, 0.21, 0.10),
Mean_X    = c(0.73, 0.44, 0.58, 0.45));
#calculating effect sizes
df <- effect_size_additive(Control_N         = df$N_C,
Control_SD        = df$SD_C,
Control_Mean      = df$Mean_C,
StressorA_N       = df$N_A,
StressorA_SD      = df$SD_A,
StressorA_Mean    = df$Mean_A,
StressorB_N       = df$N_B,
StressorB_SD      = df$SD_B,
StressorB_Mean    = df$Mean_B,
StressorsAB_N     = df$N_X,
StressorsAB_SD    = df$SD_X,
StressorsAB_Mean  = df$Mean_X,
Significance_Level = 0.10);
#classifying interactions
df <- classify_interactions(effect_size_dataframe = df,
assign_reversals = TRUE,
remove_directionality = TRUE);
#generate summary plots
df_plots <- summary_plots(effect_size_dataframe = df,
Significance_Level = 0.10)
df_plots
df <- data.frame(N_C       = c(3, 5, 4, 4),
SD_C      = c(0.05, 0.1, 0.12, 0.19),
Mean_C    = c(0.9, 0.92, 0.75, 0.86),
N_A       = c(3, 5, 4, 4),
SD_A      = c(0.14, 0.12, 0.16, 0.13),
Mean_A    = c(0.66, 0.72, 0.71, 0.67),
N_B       = c(3, 5, 4, 4),
SD_B      = c(0.12, 0.08, 0.14, 0.14),
Mean_B    = c(0.69, 0.73, 0.62, 0.69),
N_X       = c(3, 5, 4, 4),
SD_X      = c(0.08, 0.18, 0.21, 0.10),
Mean_X    = c(0.73, 0.44, 0.58, 0.45));
#calculating effect sizes
df <- effect_size_additive(Control_N         = df$N_C,
Control_SD        = df$SD_C,
Control_Mean      = df$Mean_C,
StressorA_N       = df$N_A,
StressorA_SD      = df$SD_A,
StressorA_Mean    = df$Mean_A,
StressorB_N       = df$N_B,
StressorB_SD      = df$SD_B,
StressorB_Mean    = df$Mean_B,
StressorsAB_N     = df$N_X,
StressorsAB_SD    = df$SD_X,
StressorsAB_Mean  = df$Mean_X,
Significance_Level = 0.10);
#classifying interactions
df <- classify_interactions(effect_size_dataframe = df,
assign_reversals = TRUE,
remove_directionality = TRUE);
#generate summary plots
df_plots <- summary_plots(effect_size_dataframe = df,
Significance_Level = 0.10)
df_plots
df <- data.frame(N_C       = c(3, 5, 4, 4, 8, 8, 6, 8),
SD_C      = c(0.05, 0.10, 0.12, 0.19, 0.09, 0.06, 0.07. 0.13),
Mean_C    = c(0.90, 0.92, 0.75, 0.86, 0.80, 0.97, 0.94, 0.78),
N_A       = c(3, 5, 4, 4, 8, 8, 6, 8),
SD_A      = c(0.14, 0.12, 0.16, 0.13, 0.11, 0.11, 0.08, 0.14),
Mean_A    = c(0.66, 0.72, 0.71, 0.67, 0.75, 0.50, 0.63, 0.61),
N_B       = c(3, 5, 4, 4, 8, 8, 6, 8),
SD_B      = c(0.12, 0.08, 0.14, 0.14, 0.12, 0.09, 0.13, 0.19),
Mean_B    = c(0.69, 0.73, 0.62, 0.69, 0.77, 0.54, 0.68, 0.53),
N_X       = c(3, 5, 4, 4, 8, 8, 6, 8),
SD_X      = c(0.08, 0.18, 0.21, 0.10, 0.10, 0.11, 0.13, 0.14),
Mean_X    = c(0.73, 0.44, 0.58, 0.45, 0.30, 0.48, 0.60, 0.41));
df <- data.frame(N_C       = c(3, 5, 4, 4, 8, 8, 6, 8),
SD_C      = c(0.05, 0.10, 0.12, 0.19, 0.09, 0.06, 0.07. 0.13),
Mean_C    = c(0.90, 0.92, 0.75, 0.86, 0.80, 0.97, 0.94, 0.78),
N_A       = c(3, 5, 4, 4, 8, 8, 6, 8),
SD_A      = c(0.14, 0.12, 0.16, 0.13, 0.11, 0.11, 0.08, 0.14),
Mean_A    = c(0.66, 0.72, 0.71, 0.67, 0.75, 0.50, 0.63, 0.61),
N_B       = c(3, 5, 4, 4, 8, 8, 6, 8),
SD_B      = c(0.12, 0.08, 0.14, 0.14, 0.12, 0.09, 0.13, 0.19),
Mean_B    = c(0.69, 0.73, 0.62, 0.69, 0.77, 0.54, 0.68, 0.53),
N_X       = c(3, 5, 4, 4, 8, 8, 6, 8),
SD_X      = c(0.08, 0.18, 0.21, 0.10, 0.10, 0.11, 0.13, 0.14),
Mean_X    = c(0.73, 0.44, 0.58, 0.45, 0.30, 0.48, 0.60, 0.41));
df <- data.frame(N_C       = c(3, 5, 4, 4, 8, 8, 6, 8),
SD_C      = c(0.05, 0.10, 0.12, 0.19, 0.09, 0.06, 0.07, 0.13),
Mean_C    = c(0.90, 0.92, 0.75, 0.86, 0.80, 0.97, 0.94, 0.78),
N_A       = c(3, 5, 4, 4, 8, 8, 6, 8),
SD_A      = c(0.14, 0.12, 0.16, 0.13, 0.11, 0.11, 0.08, 0.14),
Mean_A    = c(0.66, 0.72, 0.71, 0.67, 0.75, 0.50, 0.63, 0.61),
N_B       = c(3, 5, 4, 4, 8, 8, 6, 8),
SD_B      = c(0.12, 0.08, 0.14, 0.14, 0.12, 0.09, 0.13, 0.19),
Mean_B    = c(0.69, 0.73, 0.62, 0.69, 0.77, 0.54, 0.68, 0.53),
N_X       = c(3, 5, 4, 4, 8, 8, 6, 8),
SD_X      = c(0.08, 0.18, 0.21, 0.10, 0.10, 0.11, 0.13, 0.14),
Mean_X    = c(0.73, 0.44, 0.58, 0.45, 0.30, 0.48, 0.60, 0.41));
#calculating effect sizes
df <- effect_size_additive(Control_N         = df$N_C,
Control_SD        = df$SD_C,
Control_Mean      = df$Mean_C,
StressorA_N       = df$N_A,
StressorA_SD      = df$SD_A,
StressorA_Mean    = df$Mean_A,
StressorB_N       = df$N_B,
StressorB_SD      = df$SD_B,
StressorB_Mean    = df$Mean_B,
StressorsAB_N     = df$N_X,
StressorsAB_SD    = df$SD_X,
StressorsAB_Mean  = df$Mean_X,
Significance_Level = 0.10);
#classifying interactions
df <- classify_interactions(effect_size_dataframe = df,
assign_reversals = TRUE,
remove_directionality = TRUE);
#generate summary plots
df_plots <- summary_plots(effect_size_dataframe = df,
Significance_Level = 0.10)
df_plots
#calculating effect sizes
df <- effect_size_additive(Control_N         = df$N_C,
Control_SD        = df$SD_C,
Control_Mean      = df$Mean_C,
StressorA_N       = df$N_A,
StressorA_SD      = df$SD_A,
StressorA_Mean    = df$Mean_A,
StressorB_N       = df$N_B,
StressorB_SD      = df$SD_B,
StressorB_Mean    = df$Mean_B,
StressorsAB_N     = df$N_X,
StressorsAB_SD    = df$SD_X,
StressorsAB_Mean  = df$Mean_X,
Significance_Level = 0.05);
#classifying interactions
df <- classify_interactions(effect_size_dataframe = df,
assign_reversals = TRUE,
remove_directionality = TRUE);
#generate summary plots
df_plots <- summary_plots(effect_size_dataframe = df,
Significance_Level = 0.05)
#calculating effect sizes
df <- effect_size_additive(Control_N         = df$N_C,
Control_SD        = df$SD_C,
Control_Mean      = df$Mean_C,
StressorA_N       = df$N_A,
StressorA_SD      = df$SD_A,
StressorA_Mean    = df$Mean_A,
StressorB_N       = df$N_B,
StressorB_SD      = df$SD_B,
StressorB_Mean    = df$Mean_B,
StressorsAB_N     = df$N_X,
StressorsAB_SD    = df$SD_X,
StressorsAB_Mean  = df$Mean_X,
Significance_Level = 0.05);
df <- data.frame(N_C       = c(3, 5, 4, 4, 8, 8, 6, 8),
SD_C      = c(0.05, 0.10, 0.12, 0.19, 0.09, 0.06, 0.07, 0.13),
Mean_C    = c(0.90, 0.92, 0.75, 0.86, 0.80, 0.97, 0.94, 0.78),
N_A       = c(3, 5, 4, 4, 8, 8, 6, 8),
SD_A      = c(0.14, 0.12, 0.16, 0.13, 0.11, 0.11, 0.08, 0.14),
Mean_A    = c(0.66, 0.72, 0.71, 0.67, 0.75, 0.50, 0.63, 0.61),
N_B       = c(3, 5, 4, 4, 8, 8, 6, 8),
SD_B      = c(0.12, 0.08, 0.14, 0.14, 0.12, 0.09, 0.13, 0.19),
Mean_B    = c(0.69, 0.73, 0.62, 0.69, 0.77, 0.54, 0.68, 0.53),
N_X       = c(3, 5, 4, 4, 8, 8, 6, 8),
SD_X      = c(0.08, 0.18, 0.21, 0.10, 0.10, 0.11, 0.13, 0.14),
Mean_X    = c(0.73, 0.44, 0.58, 0.45, 0.30, 0.48, 0.60, 0.41));
#calculating effect sizes
df <- effect_size_additive(Control_N         = df$N_C,
Control_SD        = df$SD_C,
Control_Mean      = df$Mean_C,
StressorA_N       = df$N_A,
StressorA_SD      = df$SD_A,
StressorA_Mean    = df$Mean_A,
StressorB_N       = df$N_B,
StressorB_SD      = df$SD_B,
StressorB_Mean    = df$Mean_B,
StressorsAB_N     = df$N_X,
StressorsAB_SD    = df$SD_X,
StressorsAB_Mean  = df$Mean_X,
Significance_Level = 0.05);
#classifying interactions
df <- classify_interactions(effect_size_dataframe = df,
assign_reversals = TRUE,
remove_directionality = TRUE);
#generate summary plots
df_plots <- summary_plots(effect_size_dataframe = df,
Significance_Level = 0.05)
df_plots
devtools::check()
devtools::check()
source('~/.active-rstudio-document', echo=TRUE)
source('~/multiplestressR/R/classify_interactions.R', echo=TRUE)
source('~/multiplestressR/R/effect_size_additive.R', echo=TRUE)
source('~/multiplestressR/R/critical_effect_size_additive.R', echo=TRUE)
source('~/multiplestressR/R/effect_size_multiplicative.R', echo=TRUE)
source('~/multiplestressR/R/summary_plots.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
devtools::check()
source('~/multiplestressR/R/summary_plots.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
devtools::check()
source('~/.active-rstudio-document', echo=TRUE)
devtools::check()
source('~/multiplestressR/R/summary_plots.R', echo=TRUE)
df_plots <- NA
df <- NA
source('~/.active-rstudio-document', echo=TRUE)
devtools::check()
source('~/multiplestressR/R/classify_interactions.R', echo=TRUE)
source('~/multiplestressR/R/effect_size_additive.R', echo=TRUE)
source('~/multiplestressR/R/critical_effect_size_additive.R', echo=TRUE)
source('~/multiplestressR/R/effect_size_multiplicative.R', echo=TRUE)
source('~/multiplestressR/R/summary_plots.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/multiplestressR/R/summary_plots.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/multiplestressR/R/summary_plots.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/multiplestressR/R/summary_plots.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
devtools::check()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
remove.packages(multiplestressR)
install_github(multiplestressR)
install_github("benjburgess/multiplestressR")
remove.packages(multiplestressR)
remove.packages("multiplestressR")
install_github("benjburgess/multiplestressR")
build_manual(".")
path <- find.package("multiplestressR")
system(paste(shQuote(file.path(R.home("bin"), "R")),
"CMD", "Rd2pdf", shQuote(path)))
?tools
?tools::texi2pdf
build_manual(".")
