source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
df_2m_plots
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
df_2$StressorA_N <- df_2$StressorB_N <- df_2$StressorsAB_N <- df_2$Control_N
df_2m_plots
df_2_plots
df_2a_plots
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
df_2a_plots
df_2m_plots
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
df_2m$Interaction_Classification
unique(df_2m$Interaction_Classification)
df_2m -> df_MA
check_int_class <- function(x){
if(x == "Unable to Classify Interaction"){
x <- "Unable"
}
}
mapply(check_int_class,
df_MA$Interactoion_Classification)
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
df_1a -> df_MA
mapply(check_int_class,
df_MA$Interactoion_Classification)
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
check_int_class <- function(x){
if(x == "Unable to Classify Interaction"){
x <- "Unable\nto\nClassify"
}
return(x)
}
mapply(check_int_class,
df_MA$Interactoion_Classification)
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
check_int_class <- function(x){
if(x == "Unable to Classify Interaction"){
x <- "Unable\nto\nClassify"
}
return(x)
}
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
df_2m_plots
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
df_2m_plots
df_2a_plots
col_vals <- match("Null", unique(df_MA$Interaction_Classification))
df_2m -> df_MA
match("Null", unique(df_MA$Interaction_Classification))
match("Nulal", unique(df_MA$Interaction_Classification))
if(is.na(match("Null", unique(df_MA$Interaction_Classification))) == TRUE){
col_vals <- viridis::magma(dim(df_plot1)[1])
}
if(is.na(match("Null", unique(df_MA$Interaction_Classification))) == FALSE){
col_vals <- viridis::magma(dim(df_plot1)[1])[2:dim(df_plot1)[1]]
col_vals <- append(col_vals, "Black", before=match("Null", unique(df_MA$Interaction_Classification)))
}
if(is.na(match("Null", unique(df_MA$Interaction_Classification))) == FALSE){
col_vals <- viridis::magma(length(unique(df_MA$Interaction_Classification)))[2:length(unique(df_MA$Interaction_Classification))]
col_vals <- append(col_vals, "Black", before=match("Null", unique(df_MA$Interaction_Classification)))
}
df_MA$Interaction_Classification <- mapply(check_int_class,
df_MA$Interaction_Classification)
if(is.na(match("Null", unique(df_MA$Interaction_Classification))) == TRUE){
col_vals <- viridis::magma(dim(df_plot1)[1])
}
if(is.na(match("Null", unique(df_MA$Interaction_Classification))) == FALSE){
col_vals <- viridis::magma(length(unique(df_MA$Interaction_Classification)))[2:length(unique(df_MA$Interaction_Classification))]
col_vals <- append(col_vals, "Black", after = match("Null", unique(df_MA$Interaction_Classification))-1)
}
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
df_2m_plots
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
df_2m_plots
df_2a_plots
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
df_3a_plots
df_3m_plots
df_4 <- data.frame(Control_N = 1 + sample.int(19, 1000, replace = TRUE))
df_4$StressorA_N <- df_4$StressorB_N <- df_4$StressorsAB_N <- df_4$Control_N
df_4$Control_SD     <- runif(n = dim(df_4)[1], 0.05, 0.15)
df_4$StressorA_SD   <- runif(n = dim(df_4)[1], 0.05, 0.15)
df_4$StressorB_SD   <- runif(n = dim(df_4)[1], 0.05, 0.15)
df_4$StressorsAB_SD <- runif(n = dim(df_4)[1], 0.05, 0.15)
determine_means <- function(mv, ss, dd){
x <- rnorm(ss, mv, dd)
while(max(x) > 1 | min(x) < 0){
x <- rnorm(ss, mv, dd)
}
y <- mean(x)
return(y)
}
df_4$Control_Mean <- mapply(determine_means, 0.8, df_4$Control_N, df_4$Control_SD)
df_4$StressorA_Mean <- mapply(determine_means, 0.9, df_4$StressorA_N, df_4$StressorA_SD)
df_4$StressorB_Mean <- mapply(determine_means, 0.6, df_4$StressorB_N, df_4$StressorB_SD)
df_4$StressorsAB_Mean <- mapply(determine_means, 0.7, df_4$StressorsAB_N, df_4$StressorsAB_SD)
df_4$Control_SD[1] <- NA
df_4a <- effect_size_additive(df_4$Control_N,
df_4$Control_SD,
df_4$Control_Mean,
df_4$StressorA_N,
df_4$StressorA_SD,
df_4$StressorA_Mean,
df_4$StressorB_N,
df_4$StressorB_SD,
df_4$StressorB_Mean,
df_4$StressorsAB_N,
df_4$StressorsAB_SD,
df_4$StressorsAB_Mean,
TRUE,
0.05)
df_4a <- classify_interactions(df_4a,
TRUE,
TRUE)
df_4a_plots  <- summary_plots(df_4a,
TRUE,
0.05)
df_4m <- effect_size_multiplicative(df_4$Control_N,
df_4$Control_SD,
df_4$Control_Mean,
df_4$StressorA_N,
df_4$StressorA_SD,
df_4$StressorA_Mean,
df_4$StressorB_N,
df_4$StressorB_SD,
df_4$StressorB_Mean,
df_4$StressorsAB_N,
df_4$StressorsAB_SD,
df_4$StressorsAB_Mean,
0.05)
df_4m <- classify_interactions(df_4m,
TRUE,
TRUE)
df_4m_plots  <- summary_plots(df_4m,
FALSE,
0.05)
df_4m_plots
df_4a_plots
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
df_4a_plots
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
df_4a_plots
df_B20 <- obtain.data.pathway("Burgess.2020")
obtain.data.pathway <- function(paper.name){
if(paper.name == "Crain.2008"){
pathway <- "D:/BackUp_2020.05.28/Paper3/Analysis/Data/Empirical/MetaAnalyses/Crain.2008.EcologyLetters/Raw.Data/Editted/Crain.2008.Compiled.csv"
}
if(paper.name == "Jackson.2016"){
pathway <- "D:/BackUp_2020.05.28/Paper3/Analysis/Data/Empirical/MetaAnalyses/Jackson.2016.GlobalChangeBiology/Raw.Data/Editted/Jackson.2016.Compiled.csv"
}
if(paper.name == "GomezIsaza.2020"){
pathway <- "D:/BackUp_2020.05.28/Paper3/Analysis/Data/Empirical/MetaAnalyses/GomezIsaza.2020.EnvironmentalPollution/Raw.Data/Editted/GomezIsaza.2020.Compiled.csv"
}
if(paper.name == "Lange.2018"){
pathway <- "D:/BackUp_2020.05.28/Paper3/Analysis/Data/Empirical/MetaAnalyses/Lange.2018.FishandFisheries/Raw.Data/Editted/Lange.2018.Compiled.csv"
}
if(paper.name == "Wahl.2011"){
pathway <- "D:/BackUp_2020.05.28/Paper3/Analysis/Data/Empirical/MetaAnalyses/Wahl.2011.AdvanceInMarineBiology/Raw.Data/Editted/Wahl.2011.Compiled.csv"
}
if(paper.name == "Burgess.2020"){
pathway <- "D:/BackUp_2020.05.28/Paper3/Analysis/Data/Empirical/MetaAnalyses/Burgess.2020.bioRxiv/Raw.Data/Editted/Burgess.2020.Compiled.csv"
}
if(paper.name == "Harvey.2013"){
pathway <- "D:/BackUp_2020.05.28/Paper3/Analysis/Data/Empirical/MetaAnalyses/Harvey.2013.EcologyAndEvolution/Raw.Data/Editted/Harvey.2013.Compiled.csv"
}
if(paper.name == "Przeslawski.2015"){
pathway <- "D:/BackUp_2020.05.28/Paper3/Analysis/Data/Empirical/MetaAnalyses/Przeslawski.2015.GlobalChangeBiology/Raw.Data/Editted/Przeslawski.2015.Compiled.csv"
}
if(paper.name == "Seifert.2020"){
pathway <- "D:/BackUp_2020.05.28/Paper3/Analysis/Data/Empirical/MetaAnalyses/Seifert.2020.GlobalChangeBiology/Raw.Data/Editted/Seifert.2020.Compiled.csv"
}
return(pathway)
}
df_B20 <- obtain.data.pathway("Burgess.2020")
df_B20 <- read.table(obtain.data.pathway(df_B20), sep=",", header = TRUE, stringsAsFactors = FALSE)
df_B20 <- read.table(df_B20, sep=",", header = TRUE, stringsAsFactors = FALSE)
df_B20a <- effect_size_additive(df_B20$Control.N,
df_B20$Control.SD,
df_B20$Control.Mean,
df_B20$Stress1.N,
df_B20$Stress1.SD,
df_B20$Stress1.Mean,
df_B20$Stress2.N,
df_B20$Stress2.SD,
df_B20$Stress2.Mean,
df_B20$StressInt.N,
df_B20$StressInt.SD,
df_B20$StressInt.Mean,
TRUE,
0.05)
df_B20a <- classify_interactions(df_B20a,
TRUE,
TRUE)
df_B20a_plots <- summary_plots(df_B20a)
df_B20a_plots
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
df_B20a_plots
df_B20a -> df_MA
df_MA$Interaction_Classification <- mapply(check_int_class,
df_MA$Interaction_Classification)
check_int_class <- function(x){
if(x == "Unable to Classify Interaction"){
x <- "Unable\nto\nClass."
}
if(x == "Antagonistic"){
x <- "Ant."
}
if(x == "Reversal"){
x <- "Rev."
}
if(x == "Synergistic"){
x <- "Syn."
}
return(x)
}
df_MA$Interaction_Classification <- mapply(check_int_class,
df_MA$Interaction_Classification)
df_MA$Interaction_Classification
if(is.na(match("Null", unique(df_MA$Interaction_Classification))) == TRUE){
col_vals <- viridis::magma(dim(df_plot1)[1])
}
if(is.na(match("Null", unique(df_MA$Interaction_Classification))) == FALSE){
col_vals <- viridis::magma(length(unique(df_MA$Interaction_Classification)))[2:length(unique(df_MA$Interaction_Classification))]
col_vals <- append(col_vals, "Black", after = match("Null", unique(df_MA$Interaction_Classification))-1)
}
col_vals
df_MA$Interaction_Classification <- mapply(check_int_class,
df_MA$Interaction_Classification)
if(is.na(match("Null", unique(df_MA$Interaction_Classification))) == TRUE){
col_vals <- viridis::magma(dim(df_plot1)[1])
}
if(is.na(match("Null", unique(df_MA$Interaction_Classification))) == FALSE){
col_vals <- viridis::magma(length(unique(df_MA$Interaction_Classification)))[2:length(unique(df_MA$Interaction_Classification))]
col_vals <- append(col_vals, "Black", after = match("Null", unique(df_MA$Interaction_Classification)))
}
col_vals
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
df_B20a_plots
df_2a_plots
df_1a_plots
df_1m_plots
df_1m -> df_MA
df_MA$Interaction_Classification <- mapply(check_int_class,
df_MA$Interaction_Classification)
if(is.na(match("Null", unique(df_MA$Interaction_Classification))) == TRUE){
col_vals <- viridis::magma(dim(df_plot1)[1])
}
if(is.na(match("Null", unique(df_MA$Interaction_Classification))) == FALSE){
col_vals <- viridis::magma(length(unique(df_MA$Interaction_Classification)))[2:length(unique(df_MA$Interaction_Classification))]
col_vals <- append(col_vals, "Black", after = match("Null", unique(df_MA$Interaction_Classification)))
}
col_vals
match("Null", unique(df_MA$Interaction_Classification))
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
df_B20a_plots
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
df_B20a_plots
df_2a_plots
df_3a_plots
median(1,2,3,4)
median(c(1,2,3,4))
round(median(c(1,2,3,4)), 1)
round(median(c(1,2,3,4)), 0)
round(median(c(1,2,3,4)), digits = 1)
round(median(c(1,2,3,4)), digits = 2)
round(median(c(1,2,3,4)), digits = 3)
round(median(c(1,2,3,4,3)), digits = 3)
round(median(c(1,2,3,4,3,5)), digits = 3)
round(median(c(1,2,3,4,3,5,5)), digits = 3)
round(median(c(1,2,3,4,3,5,5, 5)), digits = 3)
?round
floor(median(c(1,2,3,4,3,5,5, 5)), digits = 3)
floor(median(c(1,2,3,4,3,5,5, 5)))
floor(median(c(1,2,3,4)))
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
source('D:/BackUp_2020.05.28/Paper3/Analysis/Code/Manuscript3_Analysis_Section1_V6.R', echo=TRUE)
y.B20.Add
y.B20.Add == df_B20a$Interaction_Effect_Size
df_B20 <- obtain.data.pathway("Burgess.2020")
df_B20 <- read.table(df_B20, sep=",", header = TRUE, stringsAsFactors = FALSE)
df_B20 <- subset(df_B20, Initial.Include.Exclude == "Include")
df_B20a <- effect_size_additive(df_B20$Control.N,
df_B20$Control.SD,
df_B20$Control.Mean,
df_B20$Stress1.N,
df_B20$Stress1.SD,
df_B20$Stress1.Mean,
df_B20$Stress2.N,
df_B20$Stress2.SD,
df_B20$Stress2.Mean,
df_B20$StressInt.N,
df_B20$StressInt.SD,
df_B20$StressInt.Mean,
TRUE,
0.05)
df_B20a <- classify_interactions(df_B20a,
TRUE,
TRUE)
df_B20a_plots <- summary_plots(df_B20a)
y.B20.Add == df_B20a$Interaction_Effect_Size
y.B20.Add[1]
y.B20a <- df_B20a$Interaction_Effect_Size
y.B20.Add[1]
y.B20.Add[1]
y.B20.a[1]
y.B20a[1]
i = 1; y.B20a[i]; y.B20.Add[i]
i = 2; y.B20a[i]; y.B20.Add[i]
i = 3; y.B20a[i]; y.B20.Add[i]
df_B20a <- effect_size_additive(df_B20$Control.N,
df_B20$Control.SD,
df_B20$Control.Mean,
df_B20$Stress1.N,
df_B20$Stress1.SD,
df_B20$Stress1.Mean,
df_B20$Stress2.N,
df_B20$Stress2.SD,
df_B20$Stress2.Mean,
df_B20$StressInt.N,
df_B20$StressInt.SD,
df_B20$StressInt.Mean,
FALSE,
0.05)
df_B20a <- classify_interactions(df_B20a,
TRUE,
TRUE)
df_B20a_plots <- summary_plots(df_B20a,
FALSE,
0.05)
y.B20a <- df_B20a$Interaction_Effect_Size
i = 1; y.B20a[i]; y.B20.Add[i]
y.B20a[i] == y.B20.Add
y.B20a == y.B20.Add
df.B20.Add$Interaction.Effect.Size.Additive.No.Dir == df_B20a$Interaction_Effect_Size
df.B20.Add$Interaction.Effect.Size.Additive.No.Dir == df_B20a$Interaction_Effect_Size
df.B20.Mul$Interaction.Effect.Size.Multiplicative.No.Dir == df_B20m$Interaction_Effect_Size
df_B20m <- effect_size_multiplicative(df_B20$Control.N,
df_B20$Control.SD,
df_B20$Control.Mean,
df_B20$Stress1.N,
df_B20$Stress1.SD,
df_B20$Stress1.Mean,
df_B20$Stress2.N,
df_B20$Stress2.SD,
df_B20$Stress2.Mean,
df_B20$StressInt.N,
df_B20$StressInt.SD,
df_B20$StressInt.Mean,
0.05)
df_B20m <- classify_interactions(df_B20a,
TRUE,
TRUE)
df_B20m <- classify_interactions(df_B20m,
TRUE,
TRUE)
df_B20m_plots <- summary_plots(df_B20m,
0.05)
df.B20.Add$Interaction.Effect.Size.Additive.No.Dir == df_B20a$Interaction_Effect_Size
df.B20.Mul$Interaction.Effect.Size.Multiplicative.No.Dir == df_B20m$Interaction_Effect_Size
for(i in 1:dim(df.B20.Add)[1]){
if(df.B20.Add$Interaction.Class.Additive[i] == "Additive"){
df.B20.Add$Interaction.Class.Additive[i] <- "Null"
}
if(df.B20.Add$Interaction.Class.Multiplicative[i] == "Additive"){
df.B20.Add$Interaction.Class.Multiplicative[i] <- "Null"
}
}
for(i in 1:dim(df.B20.Add)[1]){
if(df.B20.Add$Interaction.Class.Additive[i] == "Additive"){
df.B20.Add$Interaction.Class.Additive[i] <- "Null"
}
if(df.B20.Mul$Interaction.Class.Multiplicative[i] == "Additive"){
df.B20.Mul$Interaction.Class.Multiplicative[i] <- "Null"
}
}
for(i in 1:dim(df.B20.Add)[1]){
if(df.B20.Add$Interaction.Class.Additive[i] == "Additive"){
df.B20.Add$Interaction.Class.Additive[i] <- "Null"
}
if(df.B20.Mul$Interaction.Class.Multiplicative[i] == "Additive"){
df.B20.Mul$Interaction.Class.Multiplicative[i] <- "Null"
}
}
df.B20.Add$Interaction.Class.Additive == df_B20a$Interaction_Classification
df.B20.Mul$Interaction.Class.Multiplicative == df_B20m$Interaction_Classification
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
df_P15 <- obtain.data.pathway("Przeslawski.2015")
df_P15 <- read.table(df_P15, sep=",", header = TRUE, stringsAsFactors = FALSE)
df_P15 <- subset(df_P15, Initial.Include.Exclude == "Include")
df_P15a <- effect_size_additive(df_P15$Control.N,
df_P15$Control.SD,
df_P15$Control.Mean,
df_P15$Stress1.N,
df_P15$Stress1.SD,
df_P15$Stress1.Mean,
df_P15$Stress2.N,
df_P15$Stress2.SD,
df_P15$Stress2.Mean,
df_P15$StressInt.N,
df_P15$StressInt.SD,
df_P15$StressInt.Mean,
FALSE,
0.05)
df_P15a <- classify_interactions(df_P15a,
TRUE,
TRUE)
df_P15a_plots <- summary_plots(df_P15a,
FALSE,
0.05)
df_P15m <- effect_size_multiplicative(df_P15$Control.N,
df_P15$Control.SD,
df_P15$Control.Mean,
df_P15$Stress1.N,
df_P15$Stress1.SD,
df_P15$Stress1.Mean,
df_P15$Stress2.N,
df_P15$Stress2.SD,
df_P15$Stress2.Mean,
df_P15$StressInt.N,
df_P15$StressInt.SD,
df_P15$StressInt.Mean,
0.05)
df_P15m <- classify_interactions(df_P15m,
TRUE,
TRUE)
df_P15m_plots <- summary_plots(df_P15m,
0.05)
df.P15.Add$Interaction.Effect.Size.Additive.No.Dir == df_P15a$Interaction_Effect_Size
df.P15.Mul$Interaction.Effect.Size.Multiplicative.No.Dir == df_P15m$Interaction_Effect_Size
for(i in 1:dim(df.P15.Add)[1]){
if(df.P15.Add$Interaction.Class.Additive[i] == "Additive"){
df.P15.Add$Interaction.Class.Additive[i] <- "Null"
}
if(df.P15.Mul$Interaction.Class.Multiplicative[i] == "Additive"){
df.P15.Mul$Interaction.Class.Multiplicative[i] <- "Null"
}
}
df.P15.Add$Interaction.Class.Additive == df_P15a$Interaction_Classification
df.P15.Mul$Interaction.Class.Multiplicative == df_P15m$Interaction_Classification
df.B20.Add$Interaction.Effect.Size.Additive.No.Dir == df_B20a$Interaction_Effect_Size
df.B20.Add$Interaction.Effect.Size.Additive.No.Dir == df_B20a$Interaction_Effect_Size
df.B20.Mul$Interaction.Effect.Size.Multiplicative.No.Dir == df_B20m$Interaction_Effect_Size
df.B20.Add$Interaction.Class.Additive == df_B20a$Interaction_Classification
df.B20.Mul$Interaction.Class.Multiplicative == df_B20m$Interaction_Classification
df.C08.Add$Interaction.Effect.Size.Additive.No.Dir == df_C08a$Interaction_Effect_Size
df.C08.Mul$Interaction.Effect.Size.Multiplicative.No.Dir == df_C08m$Interaction_Effect_Size
df.J16.Add$Interaction.Effect.Size.Additive.No.Dir == df_J16a$Interaction_Effect_Size
df.J16.Mul$Interaction.Effect.Size.Multiplicative.No.Dir == df_J16m$Interaction_Effect_Size
df.J16.Add$Interaction.Class.Additive == df_J16a$Interaction_Classification
df.J16.Mul$Interaction.Class.Multiplicative == df_J16m$Interaction_Classification
df.G20.Add$Interaction.Effect.Size.Additive.No.Dir == df_G20a$Interaction_Effect_Size
df.G20.Mul$Interaction.Effect.Size.Multiplicative.No.Dir == df_G20m$Interaction_Effect_Size
df.G20.Add$Interaction.Class.Additive == df_G20a$Interaction_Classification
df.G20.Mul$Interaction.Class.Multiplicative == df_G20m$Interaction_Classification
df.H13.Add$Interaction.Effect.Size.Additive.No.Dir == df_H13a$Interaction_Effect_Size
df.H13.Mul$Interaction.Effect.Size.Multiplicative.No.Dir == df_H13m$Interaction_Effect_Size
df.H13.Add$Interaction.Class.Additive == df_H13a$Interaction_Classification
df.H13.Mul$Interaction.Class.Multiplicative == df_H13m$Interaction_Classification
df.P15.Add$Interaction.Effect.Size.Additive.No.Dir == df_P15a$Interaction_Effect_Size
df.P15.Mul$Interaction.Effect.Size.Multiplicative.No.Dir == df_P15m$Interaction_Effect_Size
df.P15.Add$Interaction.Class.Additive == df_P15a$Interaction_Classification
df.P15.Mul$Interaction.Class.Multiplicative == df_P15m$Interaction_Classification
View(df.C08.Add)
df.C08.Add$Interaction.Effect.Size.Additive.No.Dir == df_C08a$Interaction_Effect_Size
df.C08.Mul$Interaction.Effect.Size.Multiplicative.No.Dir == df_C08m$Interaction_Effect_Size
df_C08Add <- subset(df.C08.Add, Interaction.Effect.Size.Additive.No.Dir != df_C08a$Interaction_Effect_Size)
View(df_C08Add)
df_C08add <- subset(df_C08a, Interaction_Effect_Size != df.C08.Add$Interaction.Effect.Size.Additive.No.Dir)
df_C08Add <- subset(df.C08.Add, Interaction.Effect.Size.Additive.No.Dir != df_C08a$Interaction_Effect_Size)
df_C08add <- subset(df_C08a, Interaction_Effect_Size != df.C08.Add$Interaction.Effect.Size.Additive.No.Dir)
View(df_C08add)
df_C08Add$Interaction.Class.Additive
df_C08add$Interaction_Classification
df_C08Add$Interaction.Class.Additive == df_C08add$Interaction_Classification
df.C08.Add$Interaction.Class.Additive == df_C08a$Interaction_Classification
df.C08.Mul$Interaction.Class.Multiplicative == df_C08m$Interaction_Classification
df.C08.Add$Interaction.Effect.Size.Additive.No.Dir == df_C08a$Interaction_Effect_Size
df.C08.Mul$Interaction.Effect.Size.Multiplicative.No.Dir == df_C08m$Interaction_Effect_Size
df_C08Add$Interaction.Effect.Size.Additive.No.Dir
df_C08add$Interaction_Effect_Size
df_C08Add$Interaction.Effect.Size.Additive.No.Dir == df_C08add$Interaction_Effect_Size
class(df_C08add$Interaction_Effect_Size[1])
class(df_C08Add$Interaction.Effect.Size.Additive.No.Dir[1])
signif(df_C08Add$Interaction.Effect.Size.Additive.No.Dir[1], 10)
signif(df_C08add$Interaction_Effect_Size[1], 10)
-0.2598691 == -0.2598691
df_P15m_plots
source('D:/BackUp_2020.05.28/Paper3/Analysis/Code/Manuscript3_Analysis_Section1_V6.R', echo=TRUE)
source('D:/BackUp_2020.05.28/RPackage/Version_0_0_8000.R', echo=TRUE)
df_P15m_plots
df_P15a_plots
df_H13m_plots
df_H13a_plots
df_G20m_plots
df_G20a_plots
df_J16m_plots
df_J16a_plots
df_C08m_plots
df_C08a_plots
df_B20m_plots
df_B20a_plots
?devtools::install_github
setwd("~/multiplestressR")
