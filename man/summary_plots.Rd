% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summary_plots.R
\name{summary_plots}
\alias{summary_plots}
\title{Generate Summary Figures}
\usage{
summary_plots(
  effect_size_dataframe,
  Small_Sample_Correction = TRUE,
  Significance_Level = 0.05
)
}
\arguments{
\item{effect_size_dataframe}{Output from the \code{\link{classify_interactions}} function.}

\item{Small_Sample_Correction}{Whether the correction for small sample sizes should be enacted
(TRUE or FALSE; default is TRUE) \emph{Note that if the multiplicative null model (see \code{\link{effect_size_multiplicative}})
was implemented, this parameter is not used and can be ignored.
If the additive null model (see \code{\link{effect_size_additive}}) was implemented, then this
parameter should be assigned the same value as in that analysis}.}

\item{Significance_Level}{The value of alpha for which confidence intervals are calculated
(numeric, between 0 and 1; default is 0.05) \emph{Note that if the multiplicative null model (see \code{\link{effect_size_multiplicative}})
was implemented, this parameter is not used and can be ignored.
If the additive null model (see \code{\link{effect_size_additive}}) was implemented, then this
parameter should be assigned the same value as in that analysis}.}
}
\value{
The function returns a series of figures each of which is outlined above.
}
\description{
Using the output from \code{\link{classify_interactions}} function, summary figures can be created using this function.
}
\details{
The figures include:

 a) The proportions of the different interaction classifications from the dataset

 b) Median sample sizes plotted against effect size (different interaction classifications are highlighted).
    Where the additive null model was used in the analysis, lines for critical effect sizes are plotted
    (see \code{\link{critical_effect_size_additive}} function).

 c) Density of different median sample sizes.

 d) Inverse of effect size variance plotted against effect size (i.e., one iteration of a funnel plot).

 e) Effect size standard error (i.e., the square root of the effect size variance) plotted against effect size (i.e., one iteration of a funnel plot)).

 Note that c - e) are most useful for researchers conducting a meta-analysis.
}
\examples{
#generating example dataframe
df <- data.frame(N_C       = c(3, 5, 4, 4, 8, 8, 6, 8),
                SD_C      = c(0.05, 0.10, 0.12, 0.19, 0.09, 0.06, 0.07, 0.13),
                Mean_C    = c(0.90, 0.92, 0.75, 0.86, 0.80, 0.97, 0.94, 0.78),
                N_A       = c(3, 5, 4, 4, 8, 8, 6, 8),
                SD_A      = c(0.14, 0.12, 0.16, 0.13, 0.11, 0.11, 0.08, 0.14),
                Mean_A    = c(0.66, 0.72, 0.71, 0.67, 0.75, 0.50, 0.63, 0.61),
                N_B       = c(3, 5, 4, 4, 8, 8, 6, 8),
                SD_B      = c(0.12, 0.08, 0.14, 0.14, 0.12, 0.09, 0.13, 0.19),
                Mean_B    = c(0.69, 0.73, 0.62, 0.69, 0.77, 0.54, 0.68, 0.53),
                N_X       = c(3, 5, 4, 4, 8, 8, 6, 8),
                SD_X      = c(0.08, 0.18, 0.21, 0.10, 0.10, 0.11, 0.13, 0.14),
                Mean_X    = c(0.73, 0.44, 0.58, 0.45, 0.50, 0.48, 0.60, 0.41));

#calculating effect sizes
df <- effect_size_additive(Control_N         = df$N_C,
                          Control_SD        = df$SD_C,
                          Control_Mean      = df$Mean_C,
                          StressorA_N       = df$N_A,
                          StressorA_SD      = df$SD_A,
                          StressorA_Mean    = df$Mean_A,
                          StressorB_N       = df$N_B,
                          StressorB_SD      = df$SD_B,
                          StressorB_Mean    = df$Mean_B,
                          StressorsAB_N     = df$N_X,
                          StressorsAB_SD    = df$SD_X,
                          StressorsAB_Mean  = df$Mean_X,
                          Significance_Level = 0.05);

#classifying interactions
df <- classify_interactions(effect_size_dataframe = df,
                   assign_reversals = TRUE,
                   remove_directionality = TRUE);

#generate summary plots
df_plots <- summary_plots(effect_size_dataframe = df,
                   Significance_Level = 0.05)

}
